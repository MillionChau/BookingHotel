services:
  mongodb:
    image: mongo:latest
    container_name: booking_mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - booking-network

  backend:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    container_name: booking_backend
    ports:
      - "0.0.0.0:5360:5360"
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/booking?authSource=admin
      - JWT_SECRET=your-jwt-secret
      - PORT=5360
    depends_on:
      - mongodb
    volumes:
      - ./Backend:/app
      - /app/node_modules
    networks:
      - booking-network
    healthcheck:
      test: ["CMD", "node", "health-check.js"]
      interval: 30s
      timeout: 10s
      retries: 3
    env_file:
      - .env.network

  frontend:
    build:
      context: ./booking-hotel
      dockerfile: Dockerfile
    container_name: booking_frontend
    ports:
      - "0.0.0.0:3000:3000"
    depends_on:
      - backend
    networks:
      - booking-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  prometheus:
    image: prom/prometheus:latest
    container_name: booking_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - booking-network
    depends_on:
      - backend
      - frontend

  grafana:
    image: grafana/grafana:latest
    container_name: booking_grafana
    ports:
      - "0.0.0.0:3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana123
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - booking-network
    depends_on:
      - prometheus

  node-exporter:
    image: prom/node-exporter:latest
    container_name: booking_node_exporter
    ports:
      - "9100:9100"
    networks:
      - booking-network

volumes:
  mongodb_data:
  prometheus_data:
  grafana_data:

networks:
  booking-network:
    driver: bridge